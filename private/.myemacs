;; https://github.com/Skrylar/red.el
;;(add-to-list 'load-path "~/.emacs.d/modes/red.el")
;;(require 'red)

;;-----------------------------------------
;; ## Instalação/atualização dos pacotes
;;


(package-refresh-contents)
(mapc (lambda (p)
	(package-install p))
      '(magit
	paradox
	))
(global-set-key (kbd "C-x g") 'magit-status)


;;;-----------------------------------------
;;; FUNÇÕES ÚTEIS
;;;-----------------------------------------

;;-----------------------------------------
;; ## Cancela alterações no buffer
;;
(defun  revert-buffer-preserve-modes  ()
  (interactive)
  (revert-buffer  t  nil  t))
(global-set-key (kbd "<f5>") 'revert-buffer-preserve-modes )

;;-----------------------------------------
;; ## F6 para rotacionar as janelas 
;;
(defun rotate-windows ()
  "Rotate your windows"
  (interactive)
  (other-window -1)
  (cond ((not (> (count-windows)1))
         (message "You can't rotate a single window!"))
        (t
         (setq i 1)
         (setq numWindows (count-windows))
         (while  (< i numWindows)
           (let* (
                  (w1 (elt (window-list) i))
                  (w2 (elt (window-list) (+ (% i numWindows) 1)))

                  (b1 (window-buffer w1))
                  (b2 (window-buffer w2))

                  (s1 (window-start w1))
                  (s2 (window-start w2))
                  )
             (set-window-buffer w1  b2)
             (set-window-buffer w2 b1)
             (set-window-start w1 s2)
             (set-window-start w2 s1)
             (setq i (1+ i)))))))
(global-set-key (kbd "<f6>") 'rotate-windows)


;;-----------------------------------------
;; C-x C-k remove file from disk and kill buffer
;;
(defun delete-current-buffer-file ()
  "Removes file connected to current buffer and kills buffer."
  (interactive)
  (let ((filename (buffer-file-name))
        (buffer (current-buffer))
        (name (buffer-name)))
    (if (not (and filename (file-exists-p filename)))
        (ido-kill-buffer)
      (when (yes-or-no-p "Are you sure you want to remove this file fom disk? ")
        (delete-file filename)
        (kill-buffer buffer)
        (message "File '%s' successfully removed" filename)))))
(global-set-key (kbd "C-x C-k") 'delete-current-buffer-file)

;;-----------------------------------------
;; Renomeia buffer e arquivo em disco
;;
(defun rename-current-buffer-file ()
  "Renames current buffer and file it is visiting."
  (interactive)
  (let ((name (buffer-name))
        (filename (buffer-file-name)))
    (if (not (and filename (file-exists-p filename)))
        (error "Buffer '%s' is not visiting a file!" name)
      (let ((new-name (read-file-name "New name: " filename)))
        (if (get-buffer new-name)
            (error "A buffer named '%s' already exists!" new-name)
          (rename-file filename new-name 1)
          (rename-buffer new-name)
          (set-visited-file-name new-name)
          (set-buffer-modified-p nil)
          (message "File '%s' successfully renamed to '%s'"
                   name (file-name-nondirectory new-name)))))))
(global-set-key (kbd "C-x r C-f") 'rename-current-buffer-file)

;;-----------------------------------------
;; Shuffle lines around
;;
;; TODO: verificar conflitos
;;
(defun move-line-down ()
  (interactive)
  (let ((col (current-column)))
    (save-excursion
      (forward-line)
      (transpose-lines 1))
    (forward-line)
    (move-to-column col)))

(defun move-line-up ()
  (interactive)
  (let ((col (current-column)))
    (save-excursion
      (forward-line)
      (transpose-lines -1))
    (move-to-column col)))
(global-set-key (kbd "<C-S-down>") 'move-line-down)
(global-set-key (kbd "<C-S-up>") 'move-line-up)

;;-----------------------------------------
;; Nova linha abaixo/acima do cursor
;;
(defun open-line-below ()
  (interactive)
  (end-of-line)
  (newline)
  (indent-for-tab-command))

(defun open-line-above ()
  (interactive)
  (beginning-of-line)
  (newline)
  (forward-line -1)
  (indent-for-tab-command))
(global-set-key (kbd "C-x C-<down>") 'open-line-below)
(global-set-key (kbd "C-x C-<up>") 'open-line-above)

;;-----------------------------------------
;; FIM DO ARQUIVO .myemacs
;;-----------------------------------------
